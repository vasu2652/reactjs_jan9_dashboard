[{"/Users/vasudevpaloju/Documents/workspace/edu/reactjs_jan9_dashboard/src/index.js":"1","/Users/vasudevpaloju/Documents/workspace/edu/reactjs_jan9_dashboard/src/App.js":"2","/Users/vasudevpaloju/Documents/workspace/edu/reactjs_jan9_dashboard/src/app-context.js":"3","/Users/vasudevpaloju/Documents/workspace/edu/reactjs_jan9_dashboard/src/reducer.js":"4","/Users/vasudevpaloju/Documents/workspace/edu/reactjs_jan9_dashboard/src/components/login.js":"5","/Users/vasudevpaloju/Documents/workspace/edu/reactjs_jan9_dashboard/src/components/signup.js":"6","/Users/vasudevpaloju/Documents/workspace/edu/reactjs_jan9_dashboard/src/components/home.js":"7","/Users/vasudevpaloju/Documents/workspace/edu/reactjs_jan9_dashboard/src/components/EditUser.js":"8","/Users/vasudevpaloju/Documents/workspace/edu/reactjs_jan9_dashboard/src/components/NavBar.js":"9","/Users/vasudevpaloju/Documents/workspace/edu/reactjs_jan9_dashboard/src/components/NavDrawer.js":"10","/Users/vasudevpaloju/Documents/workspace/edu/reactjs_jan9_dashboard/src/usePersist.js":"11"},{"size":1548,"mtime":1614133336327,"results":"12","hashOfConfig":"13"},{"size":1073,"mtime":1614132420204,"results":"14","hashOfConfig":"13"},{"size":498,"mtime":1613702094056,"results":"15","hashOfConfig":"13"},{"size":1007,"mtime":1614133453664,"results":"16","hashOfConfig":"13"},{"size":5227,"mtime":1614133536673,"results":"17","hashOfConfig":"13"},{"size":7577,"mtime":1614133651541,"results":"18","hashOfConfig":"13"},{"size":14181,"mtime":1614131916267,"results":"19","hashOfConfig":"13"},{"size":6187,"mtime":1614131405257,"results":"20","hashOfConfig":"13"},{"size":2188,"mtime":1614045611086,"results":"21","hashOfConfig":"13"},{"size":1467,"mtime":1614045625417,"results":"22","hashOfConfig":"13"},{"size":427,"mtime":1612231942862,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"4aardh",{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"30"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/vasudevpaloju/Documents/workspace/edu/reactjs_jan9_dashboard/src/index.js",[],"/Users/vasudevpaloju/Documents/workspace/edu/reactjs_jan9_dashboard/src/App.js",["48"],"/Users/vasudevpaloju/Documents/workspace/edu/reactjs_jan9_dashboard/src/app-context.js",[],["49","50"],"/Users/vasudevpaloju/Documents/workspace/edu/reactjs_jan9_dashboard/src/reducer.js",["51"],"/Users/vasudevpaloju/Documents/workspace/edu/reactjs_jan9_dashboard/src/components/login.js",[],"/Users/vasudevpaloju/Documents/workspace/edu/reactjs_jan9_dashboard/src/components/signup.js",[],"/Users/vasudevpaloju/Documents/workspace/edu/reactjs_jan9_dashboard/src/components/home.js",["52"],"import React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { lighten, makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport IconButton from '@material-ui/core/IconButton';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Switch from '@material-ui/core/Switch';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport FilterListIcon from '@material-ui/icons/FilterList';\nimport EditIcon from '@material-ui/icons/Edit';\nimport EditUser from './EditUser'\nfunction createData(name, calories, fat, carbs, protein) {\n  return { name, calories, fat, carbs, protein };\n}\n\nconst rows = [\n  createData('Cupcake', 305, 3.7, 67, 4.3),\n  createData('Donut', 452, 25.0, 51, 4.9),\n  createData('Eclair', 262, 16.0, 24, 6.0),\n  createData('Frozen yoghurt', 159, 6.0, 24, 4.0),\n  createData('Gingerbread', 356, 16.0, 49, 3.9),\n  createData('Honeycomb', 408, 3.2, 87, 6.5),\n  createData('Ice cream sandwich', 237, 9.0, 37, 4.3),\n  createData('Jelly Bean', 375, 0.0, 94, 0.0),\n  createData('KitKat', 518, 26.0, 65, 7.0),\n  createData('Lollipop', 392, 0.2, 98, 0.0),\n  createData('Marshmallow', 318, 0, 81, 2.0),\n  createData('Nougat', 360, 19.0, 9, 37.0),\n  createData('Oreo', 437, 18.0, 63, 4.0),\n];\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map((el) => el[0]);\n}\n\nconst headCells = [\n  { id: 'name', numeric: false, disablePadding: true, label: 'Username' },\n  { id: 'email', numeric: false, disablePadding: false, label: 'EmailId' },\n  { id: 'age', numeric: true, disablePadding: false, label: 'Age (yrs)' },\n  { id: 'gender', numeric: false, disablePadding: false, label: 'Gender (M/F)' },\n  { id: 'role', numeric: false, disablePadding: false, label: 'Role (Admin/User)' },\n  { id: 'edit', numeric: false, disablePadding: false, label: 'Edit Details' },\n  { id: 'delete', numeric: false, disablePadding: false, label: 'Delete' },\n];\n\nfunction EnhancedTableHead(props) {\n  const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\n  const createSortHandler = (property) => (event) => {\n    onRequestSort(event, property);\n  };\n\n  return (\n    <TableHead>\n      <TableRow>\n        <TableCell padding=\"checkbox\">\n          <Checkbox\n            indeterminate={numSelected > 0 && numSelected < rowCount}\n            checked={rowCount > 0 && numSelected === rowCount}\n            onChange={onSelectAllClick}\n            inputProps={{ 'aria-label': 'select all desserts' }}\n          />\n        </TableCell>\n        {headCells.map((headCell) => (\n          <TableCell\n            key={headCell.id}\n            align={headCell.numeric ? 'center' : 'center'}\n            //align = \"center\"\n            padding={headCell.disablePadding ? 'none' : 'default'}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : 'asc'}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <span className={classes.visuallyHidden}>\n                  {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\n                </span>\n              ) : null}\n            </TableSortLabel>\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n\nEnhancedTableHead.propTypes = {\n  classes: PropTypes.object.isRequired,\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired,\n};\n\nconst useToolbarStyles = makeStyles((theme) => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n  },\n  highlight:\n    theme.palette.type === 'light'\n      ? {\n          color: theme.palette.secondary.main,\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.secondary.dark,\n        },\n  title: {\n    flex: '1 1 100%',\n  },\n}));\n\nconst EnhancedTableToolbar = (props) => {\n  const classes = useToolbarStyles();\n  const { numSelected } = props;\n\n  return (\n    <Toolbar\n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0,\n      })}\n    >\n      {numSelected > 0 ? (\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\" component=\"div\">\n          {numSelected} selected\n        </Typography>\n      ) : (\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\" component=\"div\">\n          Nutrition\n        </Typography>\n      )}\n\n      {numSelected > 0 ? (\n        <Tooltip title=\"Delete\">\n          <IconButton aria-label=\"delete\">\n            <DeleteIcon />\n          </IconButton>\n        </Tooltip>\n      ) : (\n        <Tooltip title=\"Filter list\">\n          <IconButton aria-label=\"filter list\">\n            <FilterListIcon />\n          </IconButton>\n        </Tooltip>\n      )}\n    </Toolbar>\n  );\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n};\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n  },\n  paper: {\n    width: '100%',\n    marginBottom: theme.spacing(2),\n  },\n  table: {\n    minWidth: 750,\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1,\n  },\n}));\n\nexport default function EnhancedTable() {\n  const classes = useStyles();\n  const [order, setOrder] = React.useState('asc');\n  const [orderBy, setOrderBy] = React.useState('Name');\n  const [selected, setSelected] = React.useState([]);\n  const [page, setPage] = React.useState(0);\n  const [dense, setDense] = React.useState(false);\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\n  const [users, setUsers] = React.useState([]);\n  const [open, setOpen] = React.useState(false);\n  const [curUser, setCurUser] = React.useState(\"\");\n  const [curUserId, setCurUserId] = React.useState(null);\n\n  const handleOpen = (id, index) => {\n    setCurUserId(id);\n    setCurUser(users[index])\n    setOpen(true);\n  };\n\n  const handleChange = (value, element) =>{\n    setCurUser({\n      ...curUser,\n      [element]:value\n    })\n  }\n\n  const handleEdit = () => {\n    setUsers(users.map(user=>{\n      if(user.id === curUserId){\n        return {\n          ...user,\n          ...curUser\n        };\n      }\n      return user;\n    }));\n    fetch(`http://localhost:3001/users/${curUserId}`,{\n      method: 'PUT',\n      headers:{\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(curUser),\n    })\n    setOpen(false)\n    setCurUser(\"\")\n    setCurUserId(null)\n  }\n  \n  const handleClose = () =>{\n    setOpen(false);\n  }\n\n  const handleDelete = (id)=>{\n    fetch(`http://localhost:3001/users/${id}`,{\n      method: 'DELETE',\n      headers:{\n        \"Content-Type\": \"application/json\"\n      }\n    })\n  }\n  //Only once during mounting phase\n  useEffect(()=>{\n    fetch(`http://localhost:3001/users`).then(res=>res.json()).then(data=>{\n      setUsers(data);\n    })\n  })\n\n  useEffect(()=>{\n    console.log(\"This will be called after every update\")\n  })\n\n  useEffect(()=>{\n    console.log(\"This will be called when curUserId value changes\")\n  },[curUserId])\n\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n\n  const handleSelectAllClick = (event) => {\n    if (event.target.checked) {\n      const newSelecteds = rows.map((n) => n.name);\n      //setSelected(newSelecteds);\n      return;\n    }\n    setSelected([]);\n  };\n\n  const handleClick = (event, name) => {\n    // const selectedIndex = selected.indexOf(name);\n    // let newSelected = [];\n\n    // if (selectedIndex === -1) {\n    //   newSelected = newSelected.concat(selected, name);\n    // } else if (selectedIndex === 0) {\n    //   newSelected = newSelected.concat(selected.slice(1));\n    // } else if (selectedIndex === selected.length - 1) {\n    //   newSelected = newSelected.concat(selected.slice(0, -1));\n    // } else if (selectedIndex > 0) {\n    //   newSelected = newSelected.concat(\n    //     selected.slice(0, selectedIndex),\n    //     selected.slice(selectedIndex + 1),\n    //   );\n    // }\n\n    // setSelected(newSelected);\n  };\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const handleChangeDense = (event) => {\n    setDense(event.target.checked);\n  };\n\n  const isSelected = (name) => selected.indexOf(name) !== -1;\n\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\n\n  return (\n    <div className={classes.root}>\n      <Paper className={classes.paper}>\n        <EnhancedTableToolbar numSelected={selected.length} />\n        <TableContainer>\n          <Table\n            className={classes.table}\n            aria-labelledby=\"tableTitle\"\n            size={dense ? 'small' : 'medium'}\n            aria-label=\"enhanced table\"\n          >\n            <EnhancedTableHead\n              classes={classes}\n              numSelected={selected.length}\n              order={order}\n              orderBy={orderBy}\n              onSelectAllClick={handleSelectAllClick}\n              onRequestSort={handleRequestSort}\n              rowCount={users.length}\n            />\n            <TableBody>\n              {stableSort(users, getComparator(order, orderBy))\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                .map((user, index) => {\n                  const isItemSelected = isSelected(user.name);\n                  const labelId = `enhanced-table-checkbox-${index}`;\n\n                  return (\n                    <TableRow\n                      hover\n                      onClick={(event) => handleClick(event, user.name)}\n                      role=\"checkbox\"\n                      aria-checked={isItemSelected}\n                      tabIndex={-1}\n                      key={user.name}\n                      \n                      selected={isItemSelected}\n                    >\n                      <TableCell padding=\"checkbox\">\n                        <Checkbox\n                          checked={isItemSelected}\n                          inputProps={{ 'aria-labelledby': labelId }}\n                        />\n                      </TableCell>\n                      <TableCell align= \"center\" component=\"th\" id={labelId} scope=\"row\" padding=\"none\">\n                        {user.name}\n                      </TableCell>\n                      <TableCell align=\"center\">{user.email}</TableCell>\n                      <TableCell align=\"center\">{user.age}</TableCell>\n                      <TableCell align=\"center\">{user.gender}</TableCell>\n                      <TableCell align=\"center\">{user.role}</TableCell>\n                      <TableCell>\n                        <IconButton\n                        edge=\"end\"\n                        aria-label=\"edit\"\n                        onClick={()=>handleOpen(user.id, index)}\n                        >\n                            <EditIcon  color=\"action\"/>\n                        </IconButton>\n                      </TableCell>\n                      <TableCell>\n                        <IconButton\n                        edge=\"end\"\n                        aria-label=\"delete\"\n                        onClick={() => handleDelete(user.id)}\n                        >\n                            <DeleteIcon color=\"secondary\"/>\n                        </IconButton>\n                      </TableCell>\n                    </TableRow>\n                  );\n                })}\n              {emptyRows > 0 && (\n                <TableRow style={{ height: (dense ? 33 : 53) * emptyRows }}>\n                  <TableCell colSpan={6} />\n                </TableRow>\n              )}\n            </TableBody>\n          </Table>\n        </TableContainer>\n        <TablePagination\n          rowsPerPageOptions={[5, 10, 25]}\n          component=\"div\"\n          count={users.length}\n          rowsPerPage={rowsPerPage}\n          page={page}\n          onChangePage={handleChangePage}\n          onChangeRowsPerPage={handleChangeRowsPerPage}\n        />\n      </Paper>\n      <FormControlLabel\n        control={<Switch checked={dense} onChange={handleChangeDense} />}\n        label=\"Dense padding\"\n      />\n      <EditUser open ={open} handleClose={handleClose} handleChange={handleChange} handleEdit={handleEdit} curUserValue={curUser} setCurUser={setCurUser}/>\n    </div>\n  );\n}\n","/Users/vasudevpaloju/Documents/workspace/edu/reactjs_jan9_dashboard/src/components/EditUser.js",[],"/Users/vasudevpaloju/Documents/workspace/edu/reactjs_jan9_dashboard/src/components/NavBar.js",[],"/Users/vasudevpaloju/Documents/workspace/edu/reactjs_jan9_dashboard/src/components/NavDrawer.js",[],"/Users/vasudevpaloju/Documents/workspace/edu/reactjs_jan9_dashboard/src/usePersist.js",[],{"ruleId":"53","severity":1,"message":"54","line":37,"column":1,"nodeType":"55","endLine":51,"endColumn":2},{"ruleId":"56","replacedBy":"57"},{"ruleId":"58","replacedBy":"59"},{"ruleId":"53","severity":1,"message":"60","line":2,"column":1,"nodeType":"55","endLine":42,"endColumn":2},{"ruleId":"61","severity":1,"message":"62","line":303,"column":13,"nodeType":"63","messageId":"64","endLine":303,"endColumn":25},"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","no-native-reassign",["65"],"no-negated-in-lhs",["66"],"Unexpected default export of anonymous function","no-unused-vars","'newSelecteds' is assigned a value but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]